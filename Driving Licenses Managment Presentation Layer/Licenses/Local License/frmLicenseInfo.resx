<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2Q==
</value>
  </data>
</root>